@using Leopard.Models;
@using GridMvc.Html;

@{
    ViewBag.Title = "Inicio";
}

@model GroupViewModel

<h1>Bienvenido a WhatsAppUNED</h1>

<h3>Ahora nos puede buscar como whatsappuned.com !</h3>

<p>El objetivo del sitio web es facilitar la búsqueda de grupos de What's App de los cursos de la UNED (los grupos son creados y agregados por los estudiantes), este sitio no tiene ninguna relación con la universidad es creado por y para estudiantes</p>

<p><b><u>Para incorporarse a un grupo ingrese desde un navegador como Mozilla o Google Chrome desde un dispostivo donde tenga el WhatsApp abierto</u></b></p>

<p>Si necesita ayuda para utilizar el sitio puede ir @Html.ActionLink("acá", "Help", "Home")</p>

<p>Reporte algún problema o brindenos su opinión en la siguiente <a href="https://1drv.ms/xs/s!AkPh7xxy7MMXhZhGbniHBqsQoy9mFA">encuesta</a></p>


<br />




@{ 
   

    if (Model.Result != null)
    {

        var claseStatus = Model.Result.Status ? "alert-success" : "alert-danger";

        <div class="alert @claseStatus alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @Model.Result.Message
        </div>
   }
}




<div class="panel panel-default">
    <div class="panel-heading">Cursos disponibles</div>
    <div class="panel-body">

        @Html.Grid(Model.Grupos).SetLanguage("es").Columns(columns =>
   {

   columns.Add(e => e.Code)
    .Titled("Código")
    .Filterable(true);

   columns.Add(e => e.Name)
       .Titled("Nombre")
       .Filterable(true);

   columns.Add()
       .Titled("URL")
       .Sanitized(false)
       .Encoded(false)
       .RenderValueAs(e => @<a href="@e.WhatsAppURL" target="_blank">@e.WhatsAppURL</a>);


        }).WithPaging(20)
    </div>
</div>

<br />

<div class="panel panel-default">
    <div class="panel-heading">Comprobar existencia de grupo</div>
    <div class="panel-body">

        @using (Html.BeginForm("CheckGroup", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

                <div class="col-lg-8">
                    <div class="form-group">

                        @Html.LabelFor(x => x.Grupo.WhatsAppURL, new { @class = "col-md-4 control-label " })
                        <div class="col-md-8">

                            @Html.TextBoxFor(x => x.Grupo.WhatsAppURL, new { @class = "form-control input-md", placeholder = Html.DisplayNameFor(e => e.Grupo.WhatsAppURL) })

                            <span class="help-block">@Html.ValidationMessageFor(x => x.Grupo.WhatsAppURL, null, new { style = "color: red;" })</span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="col-md-4 control-label" for=""></label>
                        <div class="col-md-8">
                            <input type="reset" class="btn btn-danger" value="Restablecer" />

                            <input type="submit" class="btn btn-success" value="Verificar" />
                        </div>
                    </div>

                </div>
         
        }

    </div>
</div>

<br />

<div class="panel panel-default">
    <div class="panel-heading">Agregar</div>
    <div class="panel-body">

        @using (Html.BeginForm("AddGroup", "Home", FormMethod.Post, new { @class = "form-horizontal", name = "AddGroupForm"}))
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">

                        @Html.LabelFor(x => x.Grupo.Name, new { @class = "col-md-4 control-label " })
                        <div class="col-md-8">

                            @Html.TextBoxFor(x => x.Grupo.Name, new { @class = "form-control input-md", placeholder = Html.DisplayNameFor(e => e.Grupo.Name) })

                            <span class="help-block">@Html.ValidationMessageFor(x => x.Grupo.Name, null, new { style = "color: red;" })</span>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="form-group">

                        @Html.LabelFor(x => x.Grupo.WhatsAppURL, new { @class = "col-md-4 control-label " })
                        <div class="col-md-8">

                            @Html.TextBoxFor(x => x.Grupo.WhatsAppURL, new { @class = "form-control input-md", placeholder = Html.DisplayNameFor(e => e.Grupo.WhatsAppURL) })

                            <span class="help-block">@Html.ValidationMessageFor(x => x.Grupo.WhatsAppURL, null, new { style = "color: red;" })</span>
                        </div>
                    </div>
                </div>

               <div class="col-lg-4">
                    <div class="form-group">

                        @Html.LabelFor(x => x.Grupo.Code, new { @class = "col-md-4 control-label " })
                        <div class="col-md-8">

                            @Html.TextBoxFor(x => x.Grupo.Code, new { @class = "form-control input-md", placeholder = "Código", Value = "" })

                            <span class="help-block">@Html.ValidationMessageFor(x => x.Grupo.Code, null, new { style = "color: red;" })</span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8">
                    <p> <b>Nota: En caso de agregar un grupo de una carrera puede agregar en el código el de la carrera o un cero</b>   </p>
                  
                </div>
                <div class="col-lg-4 pull-right">
                    <div class="form-group">
                        <label class="col-md-4 control-label" for=""></label>
                        <div class="col-md-8">
                            <input type="reset" class="btn btn-danger" value="Restablecer" />

                            <input type="submit" class="btn btn-success" value="Agregar" />
                        </div>
                    </div>

                </div>
            </div>
        }

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}   

